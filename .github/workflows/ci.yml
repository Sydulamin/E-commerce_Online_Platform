name: Django CI Pipeline

on:
  push:
    branches:
      - feature/*
      - development
  pull_request:
    branches:
      - feature/*
      - development

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up PostgreSQL container (if not CI)
        if: ${{ env.CI != 'true' }}
        run: |
          docker-compose -f docker-compose.yml up -d postgres

  test:
    runs-on: ubuntu-latest
    needs: setup
    environment:
      CI: true  # Ensures PostgreSQL-related tests are skipped
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (Skip PostgreSQL tests in CI)
        run: |
          if [[ "$CI" == "true" ]]; then
            echo "Skipping PostgreSQL tests in CI"
            # You can run any other tests here that don't depend on PostgreSQL
          else
            python manage.py test
          fi
          
      - name: Run tests if not in CI (optional step for local)
        if: ${{ env.CI != 'true' }}
        run: |
          docker-compose exec -T web python manage.py test  # Run tests with PostgreSQL

  teardown:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ env.CI != 'true' }}  # Skip in CI
    steps:
      - name: Shutdown PostgreSQL container
        run: |
          docker-compose down
